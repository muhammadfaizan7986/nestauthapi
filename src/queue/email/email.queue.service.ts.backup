/* import { Injectable } from '@nestjs/common';
import { Queue } from 'bull';
import { InjectQueue } from '@nestjs/bull';
import { QUEUE_EMAIL_SERVICE } from 'src/constants/queue.constants';
import { UserDocument } from 'src/modules/users/users.schema';
import {
  friendRequestInterface,
  inviteFriendInterface,
  quickSinupWelcomeMessageInteface,
} from 'src/modules/auth/auth.interface';

@Injectable()
export class EmailQueueService {
  constructor(
    @InjectQueue(QUEUE_EMAIL_SERVICE) private readonly queue: Queue,
  ) {}

  async otpEmail(data: UserDocument): Promise<void> {
    await this.queue.add(`${QUEUE_EMAIL_SERVICE}-otp-message`, data);
  }
  async passwordResetSuccess(data: UserDocument): Promise<void> {
    await this.queue.add(`${QUEUE_EMAIL_SERVICE}-password-reset-success`, data);
  }
  async inviteFriend(data: inviteFriendInterface): Promise<void> {
    await this.queue.add(`${QUEUE_EMAIL_SERVICE}-invite-friend`, data);
  }

  async sendFriendRequest(data: friendRequestInterface): Promise<void> {
    await this.queue.add(`${QUEUE_EMAIL_SERVICE}-frient-request`, data);
  }

  async quickSinupWelcomeMessage(data: any): Promise<void> {
    console.log('data',data);
    await this.queue.add(`${QUEUE_EMAIL_SERVICE}-quick-signup-welcome-message`, data);
  }
}
 */